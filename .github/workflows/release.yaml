name: Upload outputs to GitHub Release

on:
  release:
    types: [created]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Install spatialite
        run: sudo apt-get install -y libsqlite3-mod-spatialite

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: pipenv

      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python

      - name: Install dependencies
        run: pipenv sync

      - name: Generate our artifacts
        run: make run

      - name: Upload artifacts
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const tag = context.ref.replace("refs/tags/", "");
            console.log("tag = ", tag);

            // Get release for this tag
            const release = await github.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag
            });

            // Upload the release assets
            await github.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.data.id,
              name: "contest_results.csv",
              data: fs.createReadStream("tmp/contest_results.csv")
            });
